package coed.collab.protocol;

import java.io.Serializable;

/**
 * The base class for all messages in the coed protocol.
 * These are serialized and passed between server and
 * client and deserialized, ensuring that the receiver
 * will always decode the message properly.
 * @author szakats
 */
public class CoedMessage implements Serializable {
	/**
	 * The same sequence ID is given to a sequence of messages
	 * that alternate between server and client. It is used to
	 * identify a response to a given message among several
	 * candidate messages of the same type (class).
	 * New sequence IDs are always generated by the party that
	 * initiates the sequence. E.g due to a particular user
	 * input the client requests something from the server with
	 * a message having a new sequence ID and the server will
	 * reply to it with a message having the same ID (but
	 * difference class and contents of course).
	 * This is necessary because multiple requests of the same
	 * type from the same client are allowed to arrive at the 
	 * server and the responses may arrive back in any order.
	 * This can also be used as part of an acknowledgment 
	 * algorithm so that when a message is resent, the other
	 * party can tell if it had already received it or not.
	 */
	
	// TODO: think about overflow
	private long sequenceID;
	
	public void setSequenceID(long sequenceID) {
		this.sequenceID = sequenceID;
	}
	
	public long getSequenceID() {
		return sequenceID;
	}
}
